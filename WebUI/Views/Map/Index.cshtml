@using SharedClasses.Models.CountryModels;
@using SharedClasses.Models.UserModels;
@using WebUI.Models;

@{
    ViewData["Title"] = "Map";
    
    

    List<CountryWithColor> countries = ViewBag.Countries;

}

<script src="~/JVectorMap/jquery.js"></script>
<link rel="stylesheet" href="~/JVectorMap/jquery-jvectormap.css">
<script src="~/JVectorMap/jvectormap.min.js"></script>
<script src="~/JVectorMap/map_miller.js"></script>

<Body>
<center>
  <div id="world-map" style="width: 1200px; height:700px"></div>
  <form id="CountryForm" asp-controller="CountryProfile" asp-action="Index">

      <input id="CountryName" name="CountryName">  </input>

  </form>
</center>
<script>

document.getElementById("CountryName").style.display="none";

function SubmitForm(countryName) {

    if(countryName = "") return;
    let form = document.getElementById('CountryForm')
    form.AddEventListener("submit", (e) => {

        e.preventDefault();
        let countryName = document.getElementById('CountryName')
        countryName.value = countryName
        form.submit()
    })

}



var values = {
  @foreach(var country in countries)
  {
    @: "@country.Code": "@country.Username",
  }
};

var scale = {
  @foreach (var country in countries)
  {
    @: "@country.Username": "@country.Color", 
  }
}

function GetCountryProfile(countryName) {



$('#world-map').vectorMap({
    map: 'world_mill',
    backgroundColor: '2f4f4f',
    zoomAnimate: true,
    regionsSelectable: true,
    regionsSelectableOne: true,
    markersSelectable: true,
    series: {
      regions: [{
        values: values,
        scale: scale
      }]
    },
    onRegionTipShow: function(event, label, code) {
      label.html(label.html() + ': ' + values[code]);
    },
    onRegionClick: function(e, code) {
      SubmitForm(code)  
    }
  });



</script>

    
</Body>
