@using SharedClasses.Models.CountryModels;
@using SharedClasses.Models.UserModels;

@{
    ViewData["Title"] = "Map";


    List<Player> players = ViewBag.Players;
    List<Country> countries = ViewBag.Countries;
    var playerData = new List<String>();

    foreach(var player in players)
    {

      string countryCode = String.Empty;
      string countryName = String.Empty;
      string color = String.Empty;

      foreach(var country in countries)
      {
        if(country.Id == player.CountryId)
        {
           countryCode = country.CountryCode;
           countryName = country.Name;  
        }
      }

      color = player.Colour;

      playerData.Add($"{countryCode}:{color}:{countryName}");

    }


}







<script src="~/JVectorMap/jquery.js"></script>
<link rel="stylesheet" href="~/JVectorMap/jquery-jvectormap.css">
<script src="~/JVectorMap/jvectormap.min.js"></script>

<script src="~/JVectorMap/map_miller.js"></script>


<Body>
<center>
  <div id="world-map" style="width: 1200px; height:700px"></div>
</center>

<script>

  
</script>


<script>

var playerData = @Html.Raw(Json.Serialize(playerData));

var mapData = {}

playerData.forEach(function (data) {
  var [countryCode, color, countryName] = data.split(":");
  mapData[countryCode] = { fill: color, name: countryName };
});



$('#world-map').vectorMap({
    map: 'world_mill',
    backgroundColor: '2f4f4f',
    zoomAnimate: true,
    regionsSelectable: true,
    onRegionClick: function(e, code)
    {
      console.log(code);
    },
    regionStyle:
    {
      initial:
      {
        fill: '#ffffff'
      }
    },
    series:
    {
      regions: [{
        values:mapData,
        attribute: 'fill'
      }]
    }
  });



</script>

    
</Body>
