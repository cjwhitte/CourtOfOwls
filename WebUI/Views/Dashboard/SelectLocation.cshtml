@using SharedClasses.Models.CountryModels
@{
    string LegionName = ViewBag.LegionName;
    string legionType = ViewBag.LegionType;
    List<CountryWithColor> Countries = ViewBag.Countries;
}
<head>
</head>


<body>



    <form id="MapSubmitForm" asp-controller="Dashboard" asp-action="SelectLocation">

        <input id="LegionType"></input>
        <input id="LegionName"></input>
        <input id="PositionLat"></input>
        <input id="PositionLang"></input>
        

    </form>





<script>


var values = {
  @foreach(var country in Countries)
  {
    @: "@country.Code": "@country.Username",
  }
};


var scale = {
  @foreach (var country in Countries)
  {
    @: "@country.Username": "@country.Color", 
  }
}



$(function() {

    var map, 
        markerIndex = 0,
        markersCoords = {}

    map = new jvm.Map({
        map:'world_mill',
        backgroundColor: '2f4f4f',
        container: $('#world-map'),
        markerStyle: {
            initial: {
                fill: 'grey',
                stroke: '4f2f2f',
                "fill-opacity": 1,
                "stroke_width": 1,
                "stroke_opacity": 1,
                r: 5
            }
        },
        markers: markers,
        zoomAnimate: true,
        onRegionTipShow: function(event, label, code) {

            label.html(label.html() + ': ' + values[code]);
        },
        onMarkerTipShow: function(event, label, code) {

            label.html(label.html() + ': ' + markers[code].latLng[0] + ' ' + markers[code].latLng[1]);
        },
        series: {
            regions: [{
                values: values,
                scale: scale
            }],
            markers: [{
                attribute: "fill",
                scale: markerScale
            }]
        },
        /*
        onMarkerClick: function(e, code) {
            map.removeMarkers([code]);
            map.tip.hide();
        }
        */
    });

})

</script>



</body>
