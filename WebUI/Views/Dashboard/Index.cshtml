@inject IHttpContextAccessor _httpContextAccessor
@using SharedClasses.Models.UserModels;
@using SharedClasses.Models.CountryModels;
@using MongoDB.Driver;
@{

    var user = DataBaseClient.PlayerCollection.Find(x => x.Username == 
    _httpContextAccessor.HttpContext.Session.GetString("Username")).FirstOrDefault();

    var country = DataBaseClient.CountryCollection.Find(x => x.Id == user.CountryId).FirstOrDefault();

    var Countries = DataBaseClient.CountryCollection.Find(
        Builders<Country>.Filter.Exists(x => x.Id)
    ).ToList();


}


<center>
    <form id="CountryInputForm" asp-controller="CountryProfile" asp-action="Index">
    <label for="CountryInput">
        Search For a Country
    </label>
    <input type="text" id="CountryName" name="CountryName" list="CountriesList">
    <datalist id="CountriesList">
    @foreach(var Country in Countries)
    {
        <option value="@Country.Name">@Country.Name</option>
    }
    </datalist>
    <button>Search</button>
    </form>


</center>


<h1>@user.Name.FirstName's Dashboard</h1>

<br><br>
<p>
    All your details and shit will go here 
</p>


<br><br>


<p>
   @country.Name has a population of @country.Population
</p>